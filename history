;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(ido-file-history minibuffer-history))
(setq ido-file-history '(".gitconfig"))
(setq minibuffer-history '("linum-mode" "init-hippie-ex"))
(setq search-ring '("h2outline" "lable" "toc" "set_nice" "se" "increment" "timer_inter" "thread_current" "incre" "timer_interrupt" "timer_elapsed" "threa" "timer_ticks" "wen"))
(setq regexp-search-ring 'nil)
(setq kill-ring '(#("___" 0 3 (face markdown-italic-face fontified t)) "测试全PASS！！！" #("
" 0 1 (fontified t)) "到" "降低" "并且" #("---

" 0 3 (face markdown-header-rule-face font-lock-multiline t fontified t) 3 4 (fontified t) 4 5 (fontified t)) "由于文档没有明确具体的要求，所以选择TDD。" #("  
" 0 2 (face markdown-pre-face font-lock-multiline t fontified t) 2 3 (face markdown-pre-face font-lock-multiline t fontified t)) #("
" 0 1 (font-lock-multiline t fontified t)) #("+ Design Document
" 0 1 (fontified t face markdown-list-face) 1 17 (fontified t) 17 18 (fontified t)) "当前线程不具有最高优先级" #("不是最高优先级" 0 7 (fontified t)) #("
" 0 1 (fontified t)) "已有的" #("#define CONVERT_TO_INT_ZERO(x) (x) / (FRACTION)
" 0 1 (category c-cpp-delimiter face font-lock-preprocessor-face fontified t c-in-sws t c-is-sws t) 1 7 (face font-lock-preprocessor-face fontified t c-in-sws t) 7 8 (fontified t c-in-sws t) 8 27 (face font-lock-function-name-face fontified t c-in-sws t) 27 28 (fontified t c-in-sws t) 28 29 (face font-lock-variable-name-face fontified t c-in-sws t) 29 47 (fontified t c-in-sws t) 47 48 (c-is-sws t fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (c-in-sws t c-is-sws t fontified t)) #("  " 0 2 (fontified t)) #("all the " 0 8 (fontified t)) #("  " 0 2 (fontified t)) #("
" 0 1 (fontified t c-is-sws t)) #("

" 0 1 (fontified t) 1 2 (fontified t)) #("wake up t" 0 9 (fontified t)) #("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("---

### Design Document ###
" 0 3 (face markdown-header-rule-face font-lock-multiline t fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 8 (face markdown-header-delimiter-face fontified t) 8 9 (fontified t) 9 24 (face markdown-header-face-3 fontified t) 24 25 (fontified t) 25 28 (face markdown-header-delimiter-face fontified t) 28 29 (fontified t)) #("          " 0 10 (c-in-sws t fontified t face font-lock-comment-face)) #("          " 0 10 (c-in-sws t fontified t face font-lock-comment-face)) #("                " 0 16 (c-in-sws t fontified t)) #("/* Returns 100 times the current thread's recent_cpu value. */
int
thread_get_recent_cpu (void) 
{
    struct thread *cur = thread_current ();
    return CONVERT_TO_INT_NEAREST (MUL_INT (cur->recent_cpu, 100));
}" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 60 (c-in-sws t fontified t face font-lock-comment-face) 60 62 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 62 63 (c-in-sws t fontified t) 63 64 (c-is-sws t fontified t face font-lock-type-face) 64 65 (fontified t face font-lock-type-face) 65 66 (fontified t c-type c-decl-id-start face font-lock-type-face) 66 67 (fontified t) 67 88 (fontified t face font-lock-function-name-face) 88 89 (fontified t) 89 90 (fontified t c-type c-decl-arg-start) 90 94 (fontified t face font-lock-type-face) 94 97 (fontified t) 97 103 (fontified t) 103 109 (fontified t face font-lock-keyword-face) 109 110 (fontified t) 110 115 (fontified t face font-lock-type-face) 115 116 (fontified t c-type c-decl-id-start face font-lock-type-face) 116 118 (fontified t) 118 121 (fontified t face font-lock-variable-name-face) 121 147 (fontified t) 147 153 (fontified t face font-lock-keyword-face) 153 211 (fontified t) 211 212 (fontified t)) #("/* Returns 100 times the system load average. */
int
thread_get_load_avg (void) 
{
    return CONVERT_TO_INT_NEAREST (MUL_INT (load_avg, 100));
}" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 46 (c-in-sws t fontified t face font-lock-comment-face) 46 48 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 48 49 (c-in-sws t fontified t) 49 50 (c-is-sws t fontified t face font-lock-type-face) 50 51 (fontified t face font-lock-type-face) 51 52 (fontified t c-type c-decl-id-start face font-lock-type-face) 52 53 (fontified t) 53 72 (fontified t face font-lock-function-name-face) 72 73 (fontified t) 73 74 (fontified t c-type c-decl-arg-start) 74 78 (fontified t face font-lock-type-face) 78 87 (fontified t) 87 93 (fontified t face font-lock-keyword-face) 93 145 (fontified t)) #("/* Returns the current thread's nice value. */
int
thread_get_nice (void) 
{
    return thread_current ()->nice;
}" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 44 (c-in-sws t fontified t face font-lock-comment-face) 44 46 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 46 47 (c-in-sws t fontified t) 47 48 (c-is-sws t fontified t face font-lock-type-face) 48 49 (fontified t face font-lock-type-face) 49 50 (fontified t c-type c-decl-id-start face font-lock-type-face) 50 51 (fontified t) 51 66 (fontified t face font-lock-function-name-face) 66 67 (fontified t) 67 68 (fontified t c-type c-decl-arg-start) 68 72 (fontified t face font-lock-type-face) 72 81 (fontified t) 81 87 (fontified t face font-lock-keyword-face) 87 114 (fontified t)) #("/* Sets the current thread's nice value to NICE. */
void
thread_set_nice (int nice)
{
    struct thread* cur;
    cur = thread_current ();
    cur->nice = nice;

    calculate_priority (cur, NULL);

  if (cur != idle_thread)
  {
      if (list_entry (list_begin (&ready_list), struct thread, elem)->priority > cur->priority)
      {
          thread_yield ();
      }
  }
}
" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 3 49 (c-in-sws t fontified t face font-lock-comment-face) 49 51 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 51 52 (c-in-sws t fontified t) 52 53 (c-is-sws t fontified t face font-lock-type-face) 53 55 (fontified t face font-lock-type-face) 55 56 (fontified t c-type c-decl-id-start face font-lock-type-face) 56 57 (fontified t) 57 72 (fontified t face font-lock-function-name-face) 72 73 (fontified t) 73 74 (fontified t c-type c-decl-arg-start) 74 77 (fontified t face font-lock-type-face) 77 78 (fontified t) 78 82 (fontified t face font-lock-variable-name-face) 82 90 (fontified t) 90 96 (fontified t face font-lock-keyword-face) 96 97 (fontified t) 97 102 (fontified t face font-lock-type-face) 102 103 (fontified t c-type c-decl-id-start face font-lock-type-face) 103 105 (fontified t) 105 108 (fontified t face font-lock-variable-name-face) 108 191 (fontified t) 191 195 (fontified t face font-lock-constant-face) 195 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t c-is-sws t) 200 201 (fontified t) 201 203 (fontified t face font-lock-keyword-face) 203 225 (fontified t) 225 229 (fontified t) 229 235 (fontified t) 235 237 (fontified t face font-lock-keyword-face) 237 239 (fontified t) 239 243 (fontified t) 243 277 (fontified t) 277 283 (fontified t face font-lock-keyword-face) 283 284 (fontified t) 284 290 (fontified t face font-lock-type-face) 290 325 (fontified t) 325 333 (fontified t) 333 360 (fontified t) 360 368 (fontified t) 368 371 (fontified t) 371 372 (rear-nonsticky t fontified t) 372 374 (fontified t)) #("
" 0 1 (fontified t)) #("//    thread_yield ();
" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 6 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 6 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (fontified t)) #("THREAD_RUNNING &&
          list" 0 6 (fontified t) 6 14 (fontified t) 14 18 (fontified t) 18 32 (fontified t)) #("cur->status" 0 3 (fontified t) 3 11 (fontified t)) #("      if (cur->status == THREAD_READY)
      {
          enum intr_level old_level;
          old_level = intr_disable ();
          list_remove (&cur->elem);
          list_insert_ordered (&ready_list, &cur->elem, priority_more, NULL);
          intr_set_level (old_level);
      }
" 0 6 (fontified t) 6 8 (face font-lock-keyword-face fontified t) 8 38 (fontified t) 38 39 (fontified t) 39 46 (fontified t) 46 47 (fontified t) 47 57 (fontified t) 57 61 (fontified t face font-lock-keyword-face) 61 62 (fontified t) 62 71 (fontified t face font-lock-type-face) 71 72 (fontified t c-type c-decl-id-start face font-lock-type-face) 72 73 (fontified t) 73 82 (fontified t face font-lock-variable-name-face) 82 83 (fontified t) 83 84 (fontified t) 84 122 (fontified t) 122 123 (fontified t) 123 158 (fontified t) 158 159 (fontified t) 159 230 (fontified t) 230 234 (fontified t face font-lock-constant-face) 234 236 (fontified t) 236 237 (fontified t) 237 274 (fontified t) 274 275 (fontified t) 275 282 (fontified t) 282 283 (fontified t)) #("    
" 0 4 (fontified t) 4 5 (c-is-sws t fontified t)) "  if (cur != idle_thread)
  {
      if (cur->status == THREAD_READY)
      {
          enum intr_level old_level;
          old_level = intr_disable ();
          list_remove (&cur->elem);
          list_insert_ordered (&ready_list, &cur->elem, priority_more, NULL);
          intr_set_level (old_level);
      }
      else if (cur->status == THREAD_RUNNING && list_entry (list_begin (&ready_list), struct thread, elem)->priority > cur->priority)
      {
          thread_yield_current (cur);
      }
  }
" #("    thread_yield ();
" 0 17 (fontified t) 17 20 (fontified t) 20 21 (fontified t)) #("void
calculate_priority (struct thread* cur, void* aux)
{
    ASSERT (is_thread (cur));
    if (cur != idle_thread)
    {
        cur->priority = PRI_MAX -
            CONVERT_TO_INT_NEAREST (DIV_INT (cur->recent_cpu, 4)) -
            cur->nice * 2;
    }
    if (cur->priority < PRI_MIN)
    {
        cur->priority = PRI_MIN;
    }
    else if (cur->priority > PRI_MAX)
    {
        cur->priority = PRI_MAX;
    }
}

void
calculate_priority_foreach (void)
{
    thread_foreach (calculate_priority, NULL);
    if (!list_empty (&ready_list))
    {
        list_sort (&ready_list, thread_cmp_priority, NULL);
    }
}
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t) 24 25 (fontified t c-type c-decl-arg-start) 25 31 (fontified t face font-lock-keyword-face) 31 32 (fontified t) 32 38 (fontified t face font-lock-type-face) 38 40 (fontified t) 40 43 (fontified t face font-lock-variable-name-face) 43 44 (fontified t c-type c-decl-arg-start) 44 45 (fontified t) 45 49 (fontified t face font-lock-type-face) 49 51 (fontified t) 51 54 (fontified t face font-lock-variable-name-face) 54 88 (fontified t) 88 92 (fontified t) 92 94 (fontified t face font-lock-keyword-face) 94 261 (fontified t) 261 263 (fontified t face font-lock-keyword-face) 263 329 (fontified t) 329 335 (fontified t) 335 339 (fontified t) 339 343 (fontified t face font-lock-keyword-face) 343 344 (fontified t) 344 346 (fontified t face font-lock-keyword-face) 346 421 (fontified t) 421 424 (fontified t face font-lock-type-face) 424 425 (fontified t c-type c-decl-id-start face font-lock-type-face) 425 426 (fontified t) 426 452 (fontified t face font-lock-function-name-face) 452 453 (fontified t) 453 454 (fontified t c-type c-decl-arg-start) 454 458 (fontified t face font-lock-type-face) 458 462 (fontified t) 462 502 (fontified t) 502 506 (fontified t face font-lock-constant-face) 506 509 (fontified t) 509 513 (fontified t) 513 515 (fontified t face font-lock-keyword-face) 515 517 (fontified t) 517 518 (fontified t face font-lock-negation-char-face) 518 603 (fontified t) 603 607 (fontified t face font-lock-constant-face) 607 616 (fontified t) 616 618 (fontified t)) #("
void
calculate_load_avg (void)
{
    struct thread *cur = thread_current ();
    int ready_threads = list_size (&ready_list);

    if (cur != idle_thread)
    {
        ++ready_threads;
    }
    load_avg = MUL (DIV_INT (CONVERT_TO_FP (59), 60), load_avg) +
        MUL_INT (DIV_INT (CONVERT_TO_FP (1), 60), ready_threads);
}" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face) 4 5 (fontified t c-type c-decl-id-start face font-lock-type-face) 5 6 (fontified t) 6 24 (fontified t face font-lock-function-name-face) 24 25 (fontified t) 25 26 (fontified t c-type c-decl-arg-start) 26 30 (fontified t face font-lock-type-face) 30 38 (fontified t) 38 44 (fontified t face font-lock-keyword-face) 44 45 (fontified t) 45 50 (fontified t face font-lock-type-face) 50 51 (fontified t c-type c-decl-id-start face font-lock-type-face) 51 53 (fontified t) 53 56 (fontified t face font-lock-variable-name-face) 56 82 (fontified t) 82 84 (fontified t face font-lock-type-face) 84 85 (fontified t c-type c-decl-id-start face font-lock-type-face) 85 86 (fontified t) 86 99 (fontified t face font-lock-variable-name-face) 99 132 (fontified t) 132 134 (fontified t face font-lock-keyword-face) 134 187 (fontified t) 187 326 (fontified t)) #("void
calculate_recent_cpu_foreach (void)
{
    thread_foreach (calculate_recent_cpu, NULL);
}
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 33 (fontified t face font-lock-function-name-face) 33 34 (fontified t) 34 35 (fontified t c-type c-decl-arg-start) 35 39 (fontified t face font-lock-type-face) 39 85 (fontified t) 85 89 (fontified t face font-lock-constant-face) 89 94 (fontified t)) #("void calculate_recent_cpu (struct thread* cur, void *aux)
{
    ASSERT (is_thread (cur));
    if (cur != idle_thread)
    {
        int load = MUL_INT (load_avg, 2);
        fixed_t coef = DIV (load, ADD_INT (load, 1));
        cur->recent_cpu = ADD_INT (MUL (coef, cur->recent_cpu), cur->nice);
    }
}
" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 25 (fontified t face font-lock-function-name-face) 25 26 (fontified t) 26 27 (fontified t c-type c-decl-arg-start) 27 33 (fontified t face font-lock-keyword-face) 33 34 (fontified t) 34 40 (fontified t face font-lock-type-face) 40 42 (fontified t) 42 45 (fontified t face font-lock-variable-name-face) 45 46 (fontified t c-type c-decl-arg-start) 46 47 (fontified t) 47 51 (fontified t face font-lock-type-face) 51 53 (fontified t) 53 56 (fontified t face font-lock-variable-name-face) 56 94 (fontified t) 94 96 (fontified t face font-lock-keyword-face) 96 132 (fontified t) 132 134 (fontified t face font-lock-type-face) 134 135 (fontified t c-type c-decl-id-start face font-lock-type-face) 135 136 (fontified t) 136 140 (fontified t face font-lock-variable-name-face) 140 174 (fontified t) 174 180 (fontified t face font-lock-type-face) 180 181 (fontified t c-type c-decl-id-start face font-lock-type-face) 181 182 (fontified t) 182 186 (fontified t face font-lock-variable-name-face) 186 304 (fontified t)) #("void
incremented_recent_cpu (void)
{
    struct thread *cur = thread_current ();
    if (cur != idle_thread)
    {
        cur->recent_cpu = ADD_INT (cur->recent_cpu, 1);
    }
}" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 27 (fontified t face font-lock-function-name-face) 27 28 (fontified t) 28 29 (fontified t c-type c-decl-arg-start) 29 33 (fontified t face font-lock-type-face) 33 41 (fontified t) 41 47 (fontified t face font-lock-keyword-face) 47 48 (fontified t) 48 53 (fontified t face font-lock-type-face) 53 54 (fontified t c-type c-decl-id-start face font-lock-type-face) 54 56 (fontified t) 56 59 (fontified t face font-lock-variable-name-face) 59 85 (fontified t) 85 87 (fontified t face font-lock-keyword-face) 87 178 (fontified t)) #("static void
timer_interrupt (struct intr_frame *args UNUSED)
{
  ticks++;
  thread_wakeup();
  thread_tick ();
  if (thread_mlfqs)
  {
      incremented_recent_cpu ();
      if (0 == ticks % TIMER_FREQ)
      {
          calculate_load_avg ();
          calculate_recent_cpu_foreach ();
      }
      if (0 == ticks % 4)
      {
          calculate_priority_foreach ();
      }
  }
}
" 0 1 (c-is-sws t fontified t face font-lock-keyword-face) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-type-face) 10 11 (fontified t c-type c-decl-id-start face font-lock-type-face) 11 12 (fontified t) 12 27 (fontified t face font-lock-function-name-face) 27 28 (fontified t) 28 29 (fontified t c-type c-decl-arg-start) 29 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 46 (fontified t face font-lock-type-face) 46 48 (fontified t) 48 52 (fontified t face font-lock-variable-name-face) 52 74 (fontified t) 74 76 (c-is-sws t c-in-sws t fontified t) 76 77 (c-is-sws t fontified t) 77 93 (fontified t) 93 111 (fontified t) 111 113 (fontified t) 113 115 (fontified t face font-lock-keyword-face) 115 174 (fontified t) 174 176 (fontified t face font-lock-keyword-face) 176 301 (fontified t) 301 303 (fontified t face font-lock-keyword-face) 303 384 (fontified t)) #("//  thread_foreach (thread_wakeup, 0);
" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 4 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (fontified t)) #("#ifndef THREADS_FIXED_POINT_H
#define THREADS_FIXED_POINT_H
typedef int32_t fixed_t;
#define P 17
#define Q 14
#define FRACTION 1 << (Q)

/* Fixed-point real arithmetic */
/* Here x and y are fixed-point number, n is an integer */
#define CONVERT_TO_FP(n) (n) * (FRACTION)
#define CONVERT_TO_INT_ZERO(x) (x) / (FRACTION)
#define CONVERT_TO_INT_NEAREST(x) ((x) >= 0 ? ((x) + (FRACTION) / 2)\\
                                   / (FRACTION) : ((x) - (FRACTION) / 2)\\
                                   / (FRACTION))
#define ADD(x, y) (x) + (y)
#define SUB(x, y) (x) - (y)
#define ADD_INT(x, n) (x) + (n) * (FRACTION)
#define SUB_INT(x, n) (x) - (n) * (FRACTION)
#define MUL(x, y) ((int64_t)(x)) * (y) / (FRACTION)
#define MUL_INT(x, n) (x) * (n)
#define DIV(x, y) ((int64_t)(x)) * (FRACTION) / (y)
#define DIV_INT(x, n) (x) / (n)

#endif

" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 1 3 (c-in-sws t fontified t face font-lock-preprocessor-face) 3 4 (c-in-sws t fontified t face (font-lock-preprocessor-face font-lock-negation-char-face)) 4 7 (c-in-sws t fontified t face font-lock-preprocessor-face) 7 29 (c-in-sws t fontified t) 29 30 (c-in-sws t fontified t category c-cpp-delimiter) 30 31 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 31 37 (c-in-sws t fontified t face font-lock-preprocessor-face) 37 38 (c-in-sws t fontified t) 38 59 (c-in-sws t fontified t face font-lock-variable-name-face) 59 60 (category c-cpp-delimiter c-in-sws t fontified t) 60 61 (c-is-sws t fontified t face font-lock-keyword-face) 61 67 (fontified t face font-lock-keyword-face) 67 68 (fontified t) 68 74 (fontified t face font-lock-type-face) 74 75 (fontified t c-type c-decl-type-start face font-lock-type-face) 75 76 (fontified t) 76 83 (fontified t face font-lock-type-face) 83 85 (fontified t) 85 86 (c-is-sws t c-in-sws t category c-cpp-delimiter fontified t face font-lock-preprocessor-face) 86 92 (c-in-sws t fontified t face font-lock-preprocessor-face) 92 93 (c-in-sws t fontified t) 93 94 (c-in-sws t fontified t face font-lock-variable-name-face) 94 97 (c-in-sws t fontified t) 97 98 (c-in-sws t category c-cpp-delimiter fontified t) 98 99 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 99 105 (c-in-sws t fontified t face font-lock-preprocessor-face) 105 106 (c-in-sws t fontified t) 106 107 (c-in-sws t fontified t face font-lock-variable-name-face) 107 110 (c-in-sws t fontified t) 110 111 (category c-cpp-delimiter c-in-sws t fontified t) 111 112 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 112 118 (c-in-sws t fontified t face font-lock-preprocessor-face) 118 119 (c-in-sws t fontified t) 119 127 (c-in-sws t fontified t face font-lock-variable-name-face) 127 136 (c-in-sws t fontified t) 136 137 (c-in-sws t fontified t category c-cpp-delimiter) 137 138 (c-in-sws t fontified t) 138 139 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 139 141 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 141 169 (c-in-sws t fontified t face font-lock-comment-face) 169 171 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 171 172 (c-in-sws t fontified t) 172 173 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 173 175 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 175 228 (c-in-sws t fontified t face font-lock-comment-face) 228 230 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 230 231 (c-in-sws t fontified t) 231 232 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 232 238 (c-in-sws t fontified t face font-lock-preprocessor-face) 238 239 (c-in-sws t fontified t) 239 252 (c-in-sws t fontified t face font-lock-function-name-face) 252 253 (c-in-sws t fontified t) 253 254 (c-in-sws t fontified t face font-lock-variable-name-face) 254 272 (c-in-sws t fontified t) 272 273 (c-in-sws t fontified t category c-cpp-delimiter) 273 274 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 274 280 (c-in-sws t fontified t face font-lock-preprocessor-face) 280 281 (c-in-sws t fontified t) 281 300 (c-in-sws t fontified t face font-lock-function-name-face) 300 301 (c-in-sws t fontified t) 301 302 (c-in-sws t fontified t face font-lock-variable-name-face) 302 320 (c-in-sws t fontified t) 320 321 (c-in-sws t fontified t category c-cpp-delimiter) 321 322 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 322 328 (c-in-sws t fontified t face font-lock-preprocessor-face) 328 329 (c-in-sws t fontified t) 329 351 (c-in-sws t fontified t face font-lock-function-name-face) 351 352 (c-in-sws t fontified t) 352 353 (c-in-sws t fontified t face font-lock-variable-name-face) 353 513 (c-in-sws t fontified t) 513 514 (c-in-sws t fontified t category c-cpp-delimiter) 514 515 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 515 521 (c-in-sws t fontified t face font-lock-preprocessor-face) 521 522 (c-in-sws t fontified t) 522 525 (c-in-sws t fontified t face font-lock-function-name-face) 525 526 (c-in-sws t fontified t) 526 527 (c-in-sws t fontified t face font-lock-variable-name-face) 527 529 (c-in-sws t fontified t) 529 530 (c-in-sws t fontified t face font-lock-variable-name-face) 530 541 (c-in-sws t fontified t) 541 542 (c-in-sws t fontified t category c-cpp-delimiter) 542 543 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 543 549 (c-in-sws t fontified t face font-lock-preprocessor-face) 549 550 (c-in-sws t fontified t) 550 553 (c-in-sws t fontified t face font-lock-function-name-face) 553 554 (c-in-sws t fontified t) 554 555 (c-in-sws t fontified t face font-lock-variable-name-face) 555 557 (c-in-sws t fontified t) 557 558 (c-in-sws t fontified t face font-lock-variable-name-face) 558 569 (c-in-sws t fontified t) 569 570 (c-in-sws t fontified t category c-cpp-delimiter) 570 571 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 571 577 (c-in-sws t fontified t face font-lock-preprocessor-face) 577 578 (c-in-sws t fontified t) 578 585 (c-in-sws t fontified t face font-lock-function-name-face) 585 586 (c-in-sws t fontified t) 586 587 (c-in-sws t fontified t face font-lock-variable-name-face) 587 589 (c-in-sws t fontified t) 589 590 (c-in-sws t fontified t face font-lock-variable-name-face) 590 614 (c-in-sws t fontified t) 614 615 (fontified t c-in-sws t category c-cpp-delimiter) 615 616 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 616 622 (c-in-sws t fontified t face font-lock-preprocessor-face) 622 623 (c-in-sws t fontified t) 623 630 (c-in-sws t fontified t face font-lock-function-name-face) 630 631 (c-in-sws t fontified t) 631 632 (c-in-sws t fontified t face font-lock-variable-name-face) 632 634 (c-in-sws t fontified t) 634 635 (c-in-sws t fontified t face font-lock-variable-name-face) 635 659 (c-in-sws t fontified t) 659 660 (c-in-sws t fontified t category c-cpp-delimiter) 660 661 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 661 667 (c-in-sws t fontified t face font-lock-preprocessor-face) 667 668 (c-in-sws t fontified t) 668 671 (c-in-sws t fontified t face font-lock-function-name-face) 671 672 (c-in-sws t fontified t) 672 673 (c-in-sws t fontified t face font-lock-variable-name-face) 673 675 (c-in-sws t fontified t) 675 676 (c-in-sws t fontified t face font-lock-variable-name-face) 676 680 (c-in-sws t fontified t) 680 687 (c-in-sws t fontified t face font-lock-type-face) 687 711 (c-in-sws t fontified t) 711 712 (c-in-sws t fontified t category c-cpp-delimiter) 712 713 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 713 719 (c-in-sws t fontified t face font-lock-preprocessor-face) 719 720 (c-in-sws t fontified t) 720 727 (c-in-sws t fontified t face font-lock-function-name-face) 727 728 (c-in-sws t fontified t) 728 729 (c-in-sws t fontified t face font-lock-variable-name-face) 729 731 (c-in-sws t fontified t) 731 732 (c-in-sws t fontified t face font-lock-variable-name-face) 732 743 (c-in-sws t fontified t) 743 744 (c-in-sws t fontified t category c-cpp-delimiter) 744 745 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 745 751 (c-in-sws t fontified t face font-lock-preprocessor-face) 751 752 (c-in-sws t fontified t) 752 755 (c-in-sws t fontified t face font-lock-function-name-face) 755 756 (c-in-sws t fontified t) 756 757 (c-in-sws t fontified t face font-lock-variable-name-face) 757 759 (c-in-sws t fontified t) 759 760 (c-in-sws t fontified t face font-lock-variable-name-face) 760 764 (c-in-sws t fontified t) 764 771 (c-in-sws t fontified t face font-lock-type-face) 771 795 (c-in-sws t fontified t) 795 796 (c-in-sws t fontified t category c-cpp-delimiter) 796 797 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 797 803 (c-in-sws t fontified t face font-lock-preprocessor-face) 803 804 (c-in-sws t fontified t) 804 811 (c-in-sws t fontified t face font-lock-function-name-face) 811 812 (c-in-sws t fontified t) 812 813 (c-in-sws t fontified t face font-lock-variable-name-face) 813 815 (c-in-sws t fontified t) 815 816 (c-in-sws t fontified t face font-lock-variable-name-face) 816 827 (c-in-sws t fontified t) 827 828 (c-in-sws t fontified t category c-cpp-delimiter) 828 829 (c-in-sws t c-is-sws t fontified t) 829 830 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 830 835 (c-in-sws t fontified t face font-lock-preprocessor-face) 835 836 (category c-cpp-delimiter c-in-sws t fontified t) 836 837 (c-is-sws t fontified t)) #("#ifndef THREADS_FIXED_POINT_H
#define THREADS_FIXED_POINT_H
typedef int32_t fixed_t;
#define P 17
#define Q 14
#define FRACTION 1 << (Q)

/* Fixed-point real arithmetic */
/* Here x and y are fixed-point number, n is an integer */
#define CONVERT_TO_FP(n) (n) * (FRACTION)
#define CONVERT_TO_INT_ZERO(x) (x) / (FRACTION)
#define CONVERT_TO_INT_NEAREST(x) ((x) >= 0 ? ((x) + (FRACTION) / 2)\\
                                   / (FRACTION) : ((x) - (FRACTION) / 2)\\
                                   / (FRACTION))
#define ADD(x, y) (x) + (y)
#define SUB(x, y) (x) - (y)
#define ADD_INT(x, n) (x) + (n) * (FRACTION)
h" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 1 3 (c-in-sws t fontified t face font-lock-preprocessor-face) 3 4 (c-in-sws t fontified t face (font-lock-preprocessor-face font-lock-negation-char-face)) 4 7 (c-in-sws t fontified t face font-lock-preprocessor-face) 7 29 (c-in-sws t fontified t) 29 30 (c-in-sws t fontified t category c-cpp-delimiter) 30 31 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 31 37 (c-in-sws t fontified t face font-lock-preprocessor-face) 37 38 (c-in-sws t fontified t) 38 59 (c-in-sws t fontified t face font-lock-variable-name-face) 59 60 (category c-cpp-delimiter c-in-sws t fontified t) 60 61 (c-is-sws t fontified t face font-lock-keyword-face) 61 67 (fontified t face font-lock-keyword-face) 67 68 (fontified t) 68 74 (fontified t face font-lock-type-face) 74 75 (fontified t c-type c-decl-type-start face font-lock-type-face) 75 76 (fontified t) 76 83 (fontified t face font-lock-type-face) 83 85 (fontified t) 85 86 (c-is-sws t c-in-sws t category c-cpp-delimiter fontified t face font-lock-preprocessor-face) 86 92 (c-in-sws t fontified t face font-lock-preprocessor-face) 92 93 (c-in-sws t fontified t) 93 94 (c-in-sws t fontified t face font-lock-variable-name-face) 94 97 (c-in-sws t fontified t) 97 98 (c-in-sws t category c-cpp-delimiter fontified t) 98 99 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 99 105 (c-in-sws t fontified t face font-lock-preprocessor-face) 105 106 (c-in-sws t fontified t) 106 107 (c-in-sws t fontified t face font-lock-variable-name-face) 107 110 (c-in-sws t fontified t) 110 111 (category c-cpp-delimiter c-in-sws t fontified t) 111 112 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 112 118 (c-in-sws t fontified t face font-lock-preprocessor-face) 118 119 (c-in-sws t fontified t) 119 127 (c-in-sws t fontified t face font-lock-variable-name-face) 127 136 (c-in-sws t fontified t) 136 137 (c-in-sws t fontified t category c-cpp-delimiter) 137 138 (c-in-sws t c-is-sws t fontified t) 138 139 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 139 141 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 141 169 (c-in-sws t fontified t face font-lock-comment-face) 169 171 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 171 172 (c-in-sws t fontified t) 172 175 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 175 228 (c-in-sws t fontified t face font-lock-comment-face) 228 230 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 230 231 (c-in-sws t fontified t) 231 232 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 232 238 (c-in-sws t fontified t face font-lock-preprocessor-face) 238 239 (c-in-sws t fontified t) 239 252 (c-in-sws t fontified t face font-lock-function-name-face) 252 253 (c-in-sws t fontified t) 253 254 (c-in-sws t fontified t face font-lock-variable-name-face) 254 272 (c-in-sws t fontified t) 272 273 (c-in-sws t fontified t category c-cpp-delimiter) 273 274 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 274 280 (c-in-sws t fontified t face font-lock-preprocessor-face) 280 281 (c-in-sws t fontified t) 281 300 (c-in-sws t fontified t face font-lock-function-name-face) 300 301 (c-in-sws t fontified t) 301 302 (c-in-sws t fontified t face font-lock-variable-name-face) 302 320 (c-in-sws t fontified t) 320 321 (c-in-sws t fontified t category c-cpp-delimiter) 321 322 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 322 328 (c-in-sws t fontified t face font-lock-preprocessor-face) 328 329 (c-in-sws t fontified t) 329 351 (c-in-sws t fontified t face font-lock-function-name-face) 351 352 (c-in-sws t fontified t) 352 353 (c-in-sws t fontified t face font-lock-variable-name-face) 353 513 (c-in-sws t fontified t) 513 514 (c-in-sws t fontified t category c-cpp-delimiter) 514 515 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 515 521 (c-in-sws t fontified t face font-lock-preprocessor-face) 521 522 (c-in-sws t fontified t) 522 525 (c-in-sws t fontified t face font-lock-function-name-face) 525 526 (c-in-sws t fontified t) 526 527 (c-in-sws t fontified t face font-lock-variable-name-face) 527 529 (c-in-sws t fontified t) 529 530 (c-in-sws t fontified t face font-lock-variable-name-face) 530 541 (c-in-sws t fontified t) 541 542 (c-in-sws t fontified t category c-cpp-delimiter) 542 543 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 543 549 (c-in-sws t fontified t face font-lock-preprocessor-face) 549 550 (c-in-sws t fontified t) 550 553 (c-in-sws t fontified t face font-lock-function-name-face) 553 554 (c-in-sws t fontified t) 554 555 (c-in-sws t fontified t face font-lock-variable-name-face) 555 557 (c-in-sws t fontified t) 557 558 (c-in-sws t fontified t face font-lock-variable-name-face) 558 569 (c-in-sws t fontified t) 569 570 (c-in-sws t fontified t category c-cpp-delimiter) 570 571 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 571 577 (c-in-sws t fontified t face font-lock-preprocessor-face) 577 578 (c-in-sws t fontified t) 578 585 (c-in-sws t fontified t face font-lock-function-name-face) 585 586 (c-in-sws t fontified t) 586 587 (c-in-sws t fontified t face font-lock-variable-name-face) 587 589 (c-in-sws t fontified t) 589 590 (c-in-sws t fontified t face font-lock-variable-name-face) 590 614 (c-in-sws t fontified t) 614 615 (c-in-sws t fontified t category c-cpp-delimiter) 615 616 (fontified t c-is-sws t)) #("#ifndef THREADS_FIXED_POINT_H
#define THREADS_FIXED_POINT_H
typedef int32_t fixed_t;
#define P 17
#define Q 14
#define FRACTION 1 << (Q)

/* Fixed-point real arithmetic */
/* Here x and y are fixed-point number, n is an integer */
#define CONVERT_TO_FP(n) (n) * (FRACTION)
#define CONVERT_TO_INT_ZERO(x) (x) / (FRACTION)
#define CONVERT_TO_INT_NEAREST(x) ((x) >= 0 ? ((x) + (FRACTION) / 2)\\
                                   / (FRACTION) : ((x) - (FRACTION) / 2)\\
                                   / (FRACTION))
#define ADD(x, y) (x) + (y)
#define SUB(x, y) (x) - (y)
#define ADD_INT(x, n) (x) + (n) * (FRACTION)
#define SUB_INT(x, n) (x) - (n) * (FRACTION)
#define MUL(x, y) ((int64_t)(x)) * (y) / (FRACTION)
#define MUL_INT(x, n) (x) * (n)
#define DIV(x, y) ((int64_t)(x)) * (FRACTION) / (y)
#define DIV_INT(x, n) (x) / (n)

#endif

" 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 1 3 (c-in-sws t fontified t face font-lock-preprocessor-face) 3 4 (c-in-sws t fontified t face (font-lock-preprocessor-face font-lock-negation-char-face)) 4 7 (c-in-sws t fontified t face font-lock-preprocessor-face) 7 29 (c-in-sws t fontified t) 29 30 (c-in-sws t fontified t category c-cpp-delimiter) 30 31 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 31 37 (c-in-sws t fontified t face font-lock-preprocessor-face) 37 38 (c-in-sws t fontified t) 38 59 (c-in-sws t fontified t face font-lock-variable-name-face) 59 60 (category c-cpp-delimiter c-in-sws t fontified t) 60 61 (c-is-sws t fontified t face font-lock-keyword-face) 61 67 (fontified t face font-lock-keyword-face) 67 68 (fontified t) 68 74 (fontified t face font-lock-type-face) 74 75 (fontified t c-type c-decl-type-start face font-lock-type-face) 75 76 (fontified t) 76 83 (fontified t face font-lock-type-face) 83 85 (fontified t) 85 86 (c-is-sws t c-in-sws t category c-cpp-delimiter fontified t face font-lock-preprocessor-face) 86 92 (c-in-sws t fontified t face font-lock-preprocessor-face) 92 93 (c-in-sws t fontified t) 93 94 (c-in-sws t fontified t face font-lock-variable-name-face) 94 97 (c-in-sws t fontified t) 97 98 (c-in-sws t category c-cpp-delimiter fontified t) 98 99 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 99 105 (c-in-sws t fontified t face font-lock-preprocessor-face) 105 106 (c-in-sws t fontified t) 106 107 (c-in-sws t fontified t face font-lock-variable-name-face) 107 110 (c-in-sws t fontified t) 110 111 (category c-cpp-delimiter c-in-sws t fontified t) 111 112 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 112 118 (c-in-sws t fontified t face font-lock-preprocessor-face) 118 119 (c-in-sws t fontified t) 119 127 (c-in-sws t fontified t face font-lock-variable-name-face) 127 136 (c-in-sws t fontified t) 136 137 (c-in-sws t fontified t category c-cpp-delimiter) 137 138 (c-in-sws t c-is-sws t fontified t) 138 139 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 139 141 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 141 169 (c-in-sws t fontified t face font-lock-comment-face) 169 171 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 171 172 (c-in-sws t fontified t) 172 175 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 175 228 (c-in-sws t fontified t face font-lock-comment-face) 228 230 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 230 231 (c-in-sws t fontified t) 231 232 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 232 238 (c-in-sws t fontified t face font-lock-preprocessor-face) 238 239 (c-in-sws t fontified t) 239 252 (c-in-sws t fontified t face font-lock-function-name-face) 252 253 (c-in-sws t fontified t) 253 254 (c-in-sws t fontified t face font-lock-variable-name-face) 254 272 (c-in-sws t fontified t) 272 273 (c-in-sws t fontified t category c-cpp-delimiter) 273 274 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 274 280 (c-in-sws t fontified t face font-lock-preprocessor-face) 280 281 (c-in-sws t fontified t) 281 300 (c-in-sws t fontified t face font-lock-function-name-face) 300 301 (c-in-sws t fontified t) 301 302 (c-in-sws t fontified t face font-lock-variable-name-face) 302 320 (c-in-sws t fontified t) 320 321 (c-in-sws t fontified t category c-cpp-delimiter) 321 322 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 322 328 (c-in-sws t fontified t face font-lock-preprocessor-face) 328 329 (c-in-sws t fontified t) 329 351 (c-in-sws t fontified t face font-lock-function-name-face) 351 352 (c-in-sws t fontified t) 352 353 (c-in-sws t fontified t face font-lock-variable-name-face) 353 513 (c-in-sws t fontified t) 513 514 (c-in-sws t fontified t category c-cpp-delimiter) 514 515 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 515 521 (c-in-sws t fontified t face font-lock-preprocessor-face) 521 522 (c-in-sws t fontified t) 522 525 (c-in-sws t fontified t face font-lock-function-name-face) 525 526 (c-in-sws t fontified t) 526 527 (c-in-sws t fontified t face font-lock-variable-name-face) 527 529 (c-in-sws t fontified t) 529 530 (c-in-sws t fontified t face font-lock-variable-name-face) 530 541 (c-in-sws t fontified t) 541 542 (c-in-sws t fontified t category c-cpp-delimiter) 542 543 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 543 549 (c-in-sws t fontified t face font-lock-preprocessor-face) 549 550 (c-in-sws t fontified t) 550 553 (c-in-sws t fontified t face font-lock-function-name-face) 553 554 (c-in-sws t fontified t) 554 555 (c-in-sws t fontified t face font-lock-variable-name-face) 555 557 (c-in-sws t fontified t) 557 558 (c-in-sws t fontified t face font-lock-variable-name-face) 558 569 (c-in-sws t fontified t) 569 570 (c-in-sws t fontified t category c-cpp-delimiter) 570 571 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 571 577 (c-in-sws t fontified t face font-lock-preprocessor-face) 577 578 (c-in-sws t fontified t) 578 585 (c-in-sws t fontified t face font-lock-function-name-face) 585 586 (c-in-sws t fontified t) 586 587 (c-in-sws t fontified t face font-lock-variable-name-face) 587 589 (c-in-sws t fontified t) 589 590 (c-in-sws t fontified t face font-lock-variable-name-face) 590 614 (c-in-sws t fontified t) 614 615 (c-in-sws t fontified t category c-cpp-delimiter) 615 616 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 616 622 (c-in-sws t fontified t face font-lock-preprocessor-face) 622 623 (c-in-sws t fontified t) 623 630 (c-in-sws t fontified t face font-lock-function-name-face) 630 631 (c-in-sws t fontified t) 631 632 (c-in-sws t fontified t face font-lock-variable-name-face) 632 634 (c-in-sws t fontified t) 634 635 (c-in-sws t fontified t face font-lock-variable-name-face) 635 659 (c-in-sws t fontified t) 659 660 (c-in-sws t fontified t category c-cpp-delimiter) 660 661 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 661 667 (c-in-sws t fontified t face font-lock-preprocessor-face) 667 668 (c-in-sws t fontified t) 668 671 (c-in-sws t fontified t face font-lock-function-name-face) 671 672 (c-in-sws t fontified t) 672 673 (c-in-sws t fontified t face font-lock-variable-name-face) 673 675 (c-in-sws t fontified t) 675 676 (c-in-sws t fontified t face font-lock-variable-name-face) 676 680 (c-in-sws t fontified t) 680 687 (c-in-sws t fontified t face font-lock-type-face) 687 711 (c-in-sws t fontified t) 711 712 (c-in-sws t fontified t category c-cpp-delimiter) 712 713 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 713 719 (c-in-sws t fontified t face font-lock-preprocessor-face) 719 720 (c-in-sws t fontified t) 720 727 (c-in-sws t fontified t face font-lock-function-name-face) 727 728 (c-in-sws t fontified t) 728 729 (c-in-sws t fontified t face font-lock-variable-name-face) 729 731 (c-in-sws t fontified t) 731 732 (c-in-sws t fontified t face font-lock-variable-name-face) 732 743 (c-in-sws t fontified t) 743 744 (c-in-sws t fontified t category c-cpp-delimiter) 744 745 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 745 751 (c-in-sws t fontified t face font-lock-preprocessor-face) 751 752 (c-in-sws t fontified t) 752 755 (c-in-sws t fontified t face font-lock-function-name-face) 755 756 (c-in-sws t fontified t) 756 757 (c-in-sws t fontified t face font-lock-variable-name-face) 757 759 (c-in-sws t fontified t) 759 760 (c-in-sws t fontified t face font-lock-variable-name-face) 760 764 (c-in-sws t fontified t) 764 771 (c-in-sws t fontified t face font-lock-type-face) 771 795 (c-in-sws t fontified t) 795 796 (c-in-sws t fontified t category c-cpp-delimiter) 796 797 (c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face category c-cpp-delimiter) 797 803 (c-in-sws t fontified t face font-lock-preprocessor-face) 803 804 (c-in-sws t fontified t) 804 811 (c-in-sws t fontified t face font-lock-function-name-face) 811 812 (c-in-sws t fontified t) 812 813 (c-in-sws t fontified t face font-lock-variable-name-face) 813 815 (c-in-sws t fontified t) 815 816 (c-in-sws t fontified t face font-lock-variable-name-face) 816 827 (c-in-sws t fontified t) 827 828 (c-in-sws t fontified t category c-cpp-delimiter) 828 829 (c-in-sws t c-is-sws t fontified t) 829 830 (category c-cpp-delimiter c-is-sws t c-in-sws t fontified t face font-lock-preprocessor-face) 830 835 (c-in-sws t fontified t face font-lock-preprocessor-face) 835 836 (category c-cpp-delimiter c-in-sws t fontified t) 836 837 (c-is-sws t fontified t)) #("/* <## */" 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 7 (fontified t face font-lock-comment-face) 7 9 (fontified t face font-lock-comment-delimiter-face)) #("
" 0 1 (fontified t)) #("/* ##> Our implementation */
" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3 26 (c-in-sws t face font-lock-comment-face fontified t) 26 28 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 28 29 (fontified t)) #("	git config --global alias.last 'log -1 HEAD'" 0 1 (fontified t) 1 32 (fontified t) 32 44 (face font-lock-string-face fontified t) 44 45 (face font-lock-string-face rear-nonsticky t fontified t)) "git config --global alias.last 'log -1 HEAD'" #("    if (!list_empty (&ready_list))
    {
        list_sort (&ready_list, thread_cmp_priority, NULL);
    }
" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 9 (face font-lock-negation-char-face fontified t) 9 34 (fontified t) 34 35 (fontified t) 35 40 (fontified t) 40 41 (fontified t) 41 94 (fontified t) 94 98 (fontified t face font-lock-constant-face) 98 100 (fontified t) 100 101 (fontified t) 101 106 (fontified t) 106 107 (fontified t)) #("&& cur->status == THREAD_RUNNING" 0 6 (fontified t) 6 14 (fontified t) 14 24 (fontified t) 24 32 (fontified t)) "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyvyWqjHl1yMWQ1ZWMwLQwLengQ8YUYUuXEnNl00ZmlbASPLVIQD/0PRUo3g9HbdzEJ/YeSo5qQNfLRwIehyj4mJ8Oco6xe7ENoYAGog4UENkUZqApKdpf1UN8AQIZ8HJ7u1eilFM3KUyKW5sNd3+ISiaqNFA8geXzK5VCbyyGXSUw3Stsdh6mC3EIO7mn/uKxzhKtO/cuD9RTCUZ4USFie2WOmi6T2O0wi86i8Vpbr9F1/HNLbGhRiZjSNALuOGgRKYB10WhfP7IMwFCVbZb87m6E/DUgkKWfgM3a6/LpRsX/ocalh72gWmKQ2+scQP9yRjLo+2KlwVZK63/ZPRB/ sptzxbbb@gmail.com
" "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCyvyWqjHl1yMWQ1ZWMwLQwLengQ8YUYUuXEnNl00ZmlbASPLVIQD/0PRUo3g9HbdzEJ/YeSo5qQNfLRwIehyj4mJ8Oco6xe7ENoYAGog4UENkUZqApKdpf1UN8AQIZ8HJ7u1eilFM3KUyKW5sNd3+ISiaqNFA8geXzK5VCbyyGXSUw3Stsdh6mC3EIO7mn/uKxzhKtO/cuD9RTCUZ4USFie2WOmi6T2O0wi86i8Vpbr9F1/HNLbGhRiZjSNALuOGgRKYB10WhfP7IMwFCVbZb87m6E/DUgkKWfgM3a6/LpRsX/ocalh72gWmKQ2+scQP9yRjLo+2KlwVZK63/ZPRB/ sptzxbbb@gmail.com
"))
